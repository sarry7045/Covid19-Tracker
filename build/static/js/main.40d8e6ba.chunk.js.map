{"version":3,"sources":["Components/Card2.jsx","Components/Cardd.jsx","Components/Api.js","Components/Chart.jsx","Components/CountryPicker.jsx","App.js","index.js"],"names":["Card2","cardTitle","value","lastUpdate","cardSubtitle","Grid","item","xs","md","component","Card","className","CardContent","Typography","variant","color","gutterBottom","start","end","duration","separator","Date","toDateString","Cardd","data","confirmed","recovered","deaths","container","spacing","justify","url","fetchData","country","a","changeUrl","axios","get","fetchDailyData","map","positive","death","date","dateChecked","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","fetchAPI","initialDailyData","lineChart","labels","toLocaleDateString","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","setCountries","FormControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","setState","this","src","alt","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40d8e6ba.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\nimport \"../Components/CSS/Card2.css\";\r\n\r\nconst Card2 = ({ cardTitle, value, lastUpdate, cardSubtitle }) => {\r\n  return (\r\n    <>\r\n      <Grid item xs={12} md={3} component={Card} className=\"Card2-card\">\r\n        <CardContent className=\"infected\">\r\n          <Typography variant=\"h6\" color=\"textSecondary\" gutterBottom>\r\n            {cardTitle}\r\n          </Typography>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n            <CountUp start={0} end={value} duration={2.75} separator=\",\" />\r\n          </Typography>\r\n          <Typography color=\"textSecondary\">\r\n            {new Date(lastUpdate).toDateString()}\r\n          </Typography>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            {cardSubtitle}\r\n          </Typography>\r\n        </CardContent>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Card2;\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport \"../Components/CSS/Cardd.css\";\r\nimport Card2 from \"./Card2\";\r\nimport { ScaleLoader } from \"react-spinners\";\r\n\r\nconst Cardd = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return <ScaleLoader color=\"#295FFF\" />;\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"Cardd-container\">\r\n        {/* <Typography gutterBottom variant=\"h4\" component=\"h2\">\r\n          Global\r\n        </Typography> */}\r\n        <Grid container spacing={4} justify=\"center\">\r\n          <Card2\r\n            className=\"infected\"\r\n            cardTitle=\"Infected\"\r\n            value={confirmed.value}\r\n            lastUpdate={lastUpdate}\r\n            cardSubtitle=\"Number of active cases from COVID-19.\"\r\n          />\r\n          <Card2\r\n            className=\"recovered\"\r\n            cardTitle=\"Recovered\"\r\n            value={recovered.value}\r\n            lastUpdate={lastUpdate}\r\n            cardSubtitle=\"Number of recoveries from COVID-19.\"\r\n          />\r\n          <Card2\r\n            className=\"deaths\"\r\n            cardTitle=\"Deaths\"\r\n            value={deaths.value}\r\n            lastUpdate={lastUpdate}\r\n            cardSubtitle=\"Number of deaths caused by COVID-19.\"\r\n          />\r\n        </Grid>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cardd;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nconst fetchData = async (country) => {\r\n  let changeUrl = url;\r\n  if (country) {\r\n    changeUrl = `${url}/countries/${country}`;\r\n  }\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(changeUrl);\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(\r\n      \"https://api.covidtracking.com/v1/us/daily.json\"\r\n    );\r\n\r\n    return data.map(({ positive, recovered, death, dateChecked: date }) => ({\r\n      confirmed: positive,\r\n      recovered,\r\n      deaths: death,\r\n      date,\r\n    }));\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst fetchCountries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\nexport default fetchData;\r\nexport { fetchDailyData, fetchCountries };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"./Api\";\r\nimport { Line, Bar, Doughnut } from \"react-chartjs-2\";\r\nimport \"../Components/CSS/Chart.css\";\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      const initialDailyData = await fetchDailyData();\r\n      setDailyData(initialDailyData);\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const lineChart = dailyData[0] ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) =>\r\n          new Date(date).toLocaleDateString()\r\n        ),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map((data) => data.recovered),\r\n            label: \"Recovered\",\r\n            borderColor: \"green\",\r\n            backgroundColor: \"rgba(0, 255, 0, 0.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\r\n              \"rgba(0, 0, 255, 0.5)\",\r\n              \"rgba(0, 255, 0, 0.5)\",\r\n              \"rgba(255, 0, 0, 0.5)\",\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current state in ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Chart-container\">{country ? barChart : lineChart}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport { fetchCountries } from \"./Api\";\r\nimport \"../Components/CSS/CountryPicker.css\";\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n  const [countries, setCountries] = useState([]);\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountries(await fetchCountries());\r\n    };\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <FormControl className=\"formControl\">\r\n        <NativeSelect\r\n          defaultValue=\"\"\r\n          onChange={(e) => handleCountryChange(e.target.value)}\r\n        >\r\n          <option value=\"\">United States</option>\r\n          {countries.map((country, i) => (\r\n            <option key={i} value={country}>\r\n              {country}\r\n            </option>\r\n          ))}\r\n        </NativeSelect>\r\n      </FormControl>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React, { useEffect } from \"react\";\r\nimport Cardd from \"./Components/Cardd\";\r\nimport Chart from \"./Components/Chart\";\r\nimport CountryPicker from \"./Components/CountryPicker\";\r\nimport fetchData from \"./Components/Api\";\r\nimport \"./App.css\";\r\nimport { Card, Grid } from \"@material-ui/core\";\r\n\r\n// function App() {\r\n\r\n//   const componentDidMount = async () => {\r\n//     const data = await fetchData();\r\n//     console.log(data);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     componentDidMount()\r\n//     console.log(fetchData());\r\n//   }, []);\r\n\r\n//   return (\r\n//     <>\r\n//       <div className=\"container\">\r\n//         <Card />\r\n//         <Chart />\r\n//         <CountryPicker />\r\n//       </div>\r\n//     </>\r\n//   );\r\n// }\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const data = await fetchData();\r\n\r\n    this.setState({ data });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const data = await fetchData(country);\r\n\r\n    this.setState({ data, country: country });\r\n  };\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n\r\n    return (\r\n      <div className=\"App-container\">\r\n        <img className=\"App-image\" src=\"./Images/CV.jpg\" alt=\"COVID-19\" />\r\n        <Cardd data={data} />\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <Chart data={data} country={country} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}